#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsForme_Zadatak
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPartneri(Partneri instance);
    partial void UpdatePartneri(Partneri instance);
    partial void DeletePartneri(Partneri instance);
    partial void InsertMjesta(Mjesta instance);
    partial void UpdateMjesta(Mjesta instance);
    partial void DeleteMjesta(Mjesta instance);
    partial void InsertDrzave(Drzave instance);
    partial void UpdateDrzave(Drzave instance);
    partial void DeleteDrzave(Drzave instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::WindowsForme_Zadatak.Properties.Settings.Default.DatabaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Partneri> Partneris
		{
			get
			{
				return this.GetTable<Partneri>();
			}
		}
		
		public System.Data.Linq.Table<Mjesta> Mjestas
		{
			get
			{
				return this.GetTable<Mjesta>();
			}
		}
		
		public System.Data.Linq.Table<Drzave> Drzaves
		{
			get
			{
				return this.GetTable<Drzave>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Partneri")]
	public partial class Partneri : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PartneriId;
		
		private bool _Deleted;
		
		private string _Naziv;
		
		private string _TipPoduzeca;
		
		private string _Adresa;
		
		private int _MjestaId;
		
		private string _OIB;
		
		private string _Telefon;
		
		private string _Telefaks;
		
		private string _Email;
		
		private string _WebStranica;
		
		private string _Napomena;
		
		private EntityRef<Mjesta> _Mjesta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartneriIdChanging(int value);
    partial void OnPartneriIdChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    partial void OnTipPoduzecaChanging(string value);
    partial void OnTipPoduzecaChanged();
    partial void OnAdresaChanging(string value);
    partial void OnAdresaChanged();
    partial void OnMjestaIdChanging(int value);
    partial void OnMjestaIdChanged();
    partial void OnOIBChanging(string value);
    partial void OnOIBChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    partial void OnTelefaksChanging(string value);
    partial void OnTelefaksChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebStranicaChanging(string value);
    partial void OnWebStranicaChanged();
    partial void OnNapomenaChanging(string value);
    partial void OnNapomenaChanged();
    #endregion
		
		public Partneri()
		{
			this._Mjesta = default(EntityRef<Mjesta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartneriId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PartneriId
		{
			get
			{
				return this._PartneriId;
			}
			set
			{
				if ((this._PartneriId != value))
				{
					this.OnPartneriIdChanging(value);
					this.SendPropertyChanging();
					this._PartneriId = value;
					this.SendPropertyChanged("PartneriId");
					this.OnPartneriIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naziv", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipPoduzeca", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string TipPoduzeca
		{
			get
			{
				return this._TipPoduzeca;
			}
			set
			{
				if ((this._TipPoduzeca != value))
				{
					this.OnTipPoduzecaChanging(value);
					this.SendPropertyChanging();
					this._TipPoduzeca = value;
					this.SendPropertyChanged("TipPoduzeca");
					this.OnTipPoduzecaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresa", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Adresa
		{
			get
			{
				return this._Adresa;
			}
			set
			{
				if ((this._Adresa != value))
				{
					this.OnAdresaChanging(value);
					this.SendPropertyChanging();
					this._Adresa = value;
					this.SendPropertyChanged("Adresa");
					this.OnAdresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MjestaId", DbType="Int NOT NULL")]
		public int MjestaId
		{
			get
			{
				return this._MjestaId;
			}
			set
			{
				if ((this._MjestaId != value))
				{
					if (this._Mjesta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMjestaIdChanging(value);
					this.SendPropertyChanging();
					this._MjestaId = value;
					this.SendPropertyChanged("MjestaId");
					this.OnMjestaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OIB", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OIB
		{
			get
			{
				return this._OIB;
			}
			set
			{
				if ((this._OIB != value))
				{
					this.OnOIBChanging(value);
					this.SendPropertyChanging();
					this._OIB = value;
					this.SendPropertyChanged("OIB");
					this.OnOIBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefaks", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Telefaks
		{
			get
			{
				return this._Telefaks;
			}
			set
			{
				if ((this._Telefaks != value))
				{
					this.OnTelefaksChanging(value);
					this.SendPropertyChanging();
					this._Telefaks = value;
					this.SendPropertyChanged("Telefaks");
					this.OnTelefaksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebStranica", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WebStranica
		{
			get
			{
				return this._WebStranica;
			}
			set
			{
				if ((this._WebStranica != value))
				{
					this.OnWebStranicaChanging(value);
					this.SendPropertyChanging();
					this._WebStranica = value;
					this.SendPropertyChanged("WebStranica");
					this.OnWebStranicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Napomena", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Napomena
		{
			get
			{
				return this._Napomena;
			}
			set
			{
				if ((this._Napomena != value))
				{
					this.OnNapomenaChanging(value);
					this.SendPropertyChanging();
					this._Napomena = value;
					this.SendPropertyChanged("Napomena");
					this.OnNapomenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mjesta_Partneri", Storage="_Mjesta", ThisKey="MjestaId", OtherKey="MjestaId", IsForeignKey=true)]
		public Mjesta Mjesta
		{
			get
			{
				return this._Mjesta.Entity;
			}
			set
			{
				Mjesta previousValue = this._Mjesta.Entity;
				if (((previousValue != value) 
							|| (this._Mjesta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mjesta.Entity = null;
						previousValue.Partneris.Remove(this);
					}
					this._Mjesta.Entity = value;
					if ((value != null))
					{
						value.Partneris.Add(this);
						this._MjestaId = value.MjestaId;
					}
					else
					{
						this._MjestaId = default(int);
					}
					this.SendPropertyChanged("Mjesta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mjesta")]
	public partial class Mjesta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MjestaId;
		
		private bool _Deleted;
		
		private string _Naziv;
		
		private int _DrzaveId;
		
		private EntitySet<Partneri> _Partneris;
		
		private EntityRef<Drzave> _Drzave;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMjestaIdChanging(int value);
    partial void OnMjestaIdChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    partial void OnDrzaveIdChanging(int value);
    partial void OnDrzaveIdChanged();
    #endregion
		
		public Mjesta()
		{
			this._Partneris = new EntitySet<Partneri>(new Action<Partneri>(this.attach_Partneris), new Action<Partneri>(this.detach_Partneris));
			this._Drzave = default(EntityRef<Drzave>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MjestaId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MjestaId
		{
			get
			{
				return this._MjestaId;
			}
			set
			{
				if ((this._MjestaId != value))
				{
					this.OnMjestaIdChanging(value);
					this.SendPropertyChanging();
					this._MjestaId = value;
					this.SendPropertyChanged("MjestaId");
					this.OnMjestaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naziv", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrzaveId", DbType="Int NOT NULL")]
		public int DrzaveId
		{
			get
			{
				return this._DrzaveId;
			}
			set
			{
				if ((this._DrzaveId != value))
				{
					if (this._Drzave.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrzaveIdChanging(value);
					this.SendPropertyChanging();
					this._DrzaveId = value;
					this.SendPropertyChanged("DrzaveId");
					this.OnDrzaveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mjesta_Partneri", Storage="_Partneris", ThisKey="MjestaId", OtherKey="MjestaId")]
		public EntitySet<Partneri> Partneris
		{
			get
			{
				return this._Partneris;
			}
			set
			{
				this._Partneris.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Drzave_Mjesta", Storage="_Drzave", ThisKey="DrzaveId", OtherKey="DrzaveId", IsForeignKey=true)]
		public Drzave Drzave
		{
			get
			{
				return this._Drzave.Entity;
			}
			set
			{
				Drzave previousValue = this._Drzave.Entity;
				if (((previousValue != value) 
							|| (this._Drzave.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Drzave.Entity = null;
						previousValue.Mjestas.Remove(this);
					}
					this._Drzave.Entity = value;
					if ((value != null))
					{
						value.Mjestas.Add(this);
						this._DrzaveId = value.DrzaveId;
					}
					else
					{
						this._DrzaveId = default(int);
					}
					this.SendPropertyChanged("Drzave");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Partneris(Partneri entity)
		{
			this.SendPropertyChanging();
			entity.Mjesta = this;
		}
		
		private void detach_Partneris(Partneri entity)
		{
			this.SendPropertyChanging();
			entity.Mjesta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Drzave")]
	public partial class Drzave : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DrzaveId;
		
		private bool _Deleted;
		
		private string _Naziv;
		
		private EntitySet<Mjesta> _Mjestas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDrzaveIdChanging(int value);
    partial void OnDrzaveIdChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    #endregion
		
		public Drzave()
		{
			this._Mjestas = new EntitySet<Mjesta>(new Action<Mjesta>(this.attach_Mjestas), new Action<Mjesta>(this.detach_Mjestas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrzaveId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DrzaveId
		{
			get
			{
				return this._DrzaveId;
			}
			set
			{
				if ((this._DrzaveId != value))
				{
					this.OnDrzaveIdChanging(value);
					this.SendPropertyChanging();
					this._DrzaveId = value;
					this.SendPropertyChanged("DrzaveId");
					this.OnDrzaveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naziv", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Drzave_Mjesta", Storage="_Mjestas", ThisKey="DrzaveId", OtherKey="DrzaveId")]
		public EntitySet<Mjesta> Mjestas
		{
			get
			{
				return this._Mjestas;
			}
			set
			{
				this._Mjestas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mjestas(Mjesta entity)
		{
			this.SendPropertyChanging();
			entity.Drzave = this;
		}
		
		private void detach_Mjestas(Mjesta entity)
		{
			this.SendPropertyChanging();
			entity.Drzave = null;
		}
	}
}
#pragma warning restore 1591
